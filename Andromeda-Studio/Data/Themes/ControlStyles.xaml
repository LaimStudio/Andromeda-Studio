<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:AndromedaStudio.Controls"
    xmlns:notifications="clr-namespace:AndromedaStudio.Notifications"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
    xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:converters="clr-namespace:AndromedaStudio.Converters">


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:EqualityToVisibilityConverter x:Key="EqualityToVisibilityConverter" />
    <converters:BooleanAndToVisibilityConverter x:Key="BooleanAndToVisibilityConverter" />
    <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter" />
    <converters:ShowDefaultCloseButtonConverter x:Key="ShowDefaultCloseButtonConverter" />

    <converters:WidthAndHeightToRectConverter x:Key="widthAndHeightToRectConverter"/>
    <converters:UpperCaseConverter x:Key="ToUpper"/>
    
    <!-- Window (WindowStyle) -->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    NonClientFrameEdges="None"
                    CaptionHeight="30"
                    GlassFrameThickness="0,0,0,0"
                    ResizeBorderThickness="10"
                    CornerRadius="0"
                />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="8" Direction="-90" ShadowDepth="3" Opacity="0.2"/>
                        </Border.Effect>
                        <Border x:Name="Border" CornerRadius="3" Margin="7">
                            <Border.Clip>
                                <RectangleGeometry
                                    RadiusX="{Binding CornerRadius.TopLeft, RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
                                    RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}">           
                                    <RectangleGeometry.Rect>
                                        <MultiBinding
                                            Converter="{StaticResource widthAndHeightToRectConverter}">
                                            <Binding
                                                Path="ActualWidth"
                                                RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
                                            <Binding
                                                Path="ActualHeight"
                                                RelativeSource="{RelativeSource AncestorType={x:Type Border}}" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <ContentPresenter/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Border" Property="Margin" Value="0"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type c:Icon}" TargetType="c:Icon">
        <Setter Property="Fill" Value="{DynamicResource Icon}"/>
    </Style>

    <Style x:Key="Plug" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <c:Icon Data="{StaticResource CircleIcon}" Fill="{DynamicResource IconColor2}"/>
                        <TextBlock Margin="0,0,0,13" Grid.Column="1" VerticalAlignment="Center"
                                   Text="{TemplateBinding Content}" Foreground="{DynamicResource IconColor2}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu Separator -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToolSeparator -->
    <Style x:Key="Separator"
       TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="10,3,10,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{DynamicResource BorderColor3}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu -->
    <Style TargetType="Menu">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="MenuItem">
        <Border Background="Transparent">
            <Grid>
                <Border x:Name="Border" Background="Gray" Opacity="0"/>
                <ContentPresenter
                    Margin="8,8,8,7" 
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
                <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Fill="{DynamicResource IconColor}" Size="12"
                        Margin="9,8,9,7" />
                <Popup 
                    Name="Popup"
                    Placement="Bottom"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="None">
                    <Border
                        Name="SubmenuBorder"
                        Background="{DynamicResource BodyColor2}"
                        CornerRadius="0,0,4,4"
                        Margin="10,0,10,10" Effect="{StaticResource Shadow4}">
                        <StackPanel
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>

                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border Background="Transparent">
            <Grid>
                <Border Name="Border" Background="Gray" Opacity="0"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
                        Margin="0,8,0,8"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True"/>
                    <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="{DynamicResource IconColor}" />
                    <Popup 
                    Name="Popup"
                    Placement="Right"
                    VerticalOffset="-1"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="None">
                        <Border
                        Name="SubmenuBorder"
                        Background="{DynamicResource BodyColor2}"
                        CornerRadius="0,4,4,0"
                        Margin="0,10,10,10" Effect="{StaticResource Shadow4}">
                            <StackPanel
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </Popup>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border Background="Transparent">
            <Grid>
                <Border Name="Border" Background="Gray" Opacity="0"/>
                <Border Name="Border2" Background="Gray" Opacity="0"/>
                <ContentPresenter 
                    Margin="8,8,8,7" 
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border Background="Transparent">
            <Grid>
                <Border Name="Border" Background="Gray" Opacity="0"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>
                    <c:Icon x:Name="CheckMark" Data="{StaticResource CheckIcon}" Grid.Column="0" Fill="{DynamicResource IconColor}" Size="12" Visibility="Hidden"/>
                    <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Grid.Column="0" Fill="{DynamicResource IconColor}" Size="12"/>
                    <ContentPresenter 
                        Margin="0,8,0,8"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True"/>
                    <TextBlock
                        Grid.Column="3"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Foreground="{DynamicResource TextColor3}"
                        Text="{TemplateBinding InputGestureText}"
                        Margin="20,0,0,0"/>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
             Value="true">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem -->
    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button -->
    <Style x:Key="{x:Type c:Button}" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource TextColor5}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonColor}"/>
        <Setter Property="Padding" Value="7,5,7,5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:Button">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="2">
                            <Border.Effect>
                                <DropShadowEffect x:Name="Shadow" BlurRadius="3" Direction="-90" ShadowDepth="1" Opacity="0.3"/>
                            </Border.Effect>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid>
                                    <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Size="{TemplateBinding IconSize}" Fill="{TemplateBinding IconFill}"/>
                                    <Grid Name="Status" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-5,-5,0"  Width="12" Height="12" Visibility="Collapsed">
                                        <Border x:Name="New" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0" BorderBrush="{DynamicResource HeadColor}" BorderThickness="1"/>
                                        <Border x:Name="New2" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0"/>
                                    </Grid>
                                </Grid>
                                <ContentPresenter x:Name="Text" VerticalAlignment="Center" Margin="7,0,0,0"/>
                            </StackPanel>
                        </Border>
                        <Border x:Name="Border" Background="Gray" Opacity="0" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Status" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="New" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            From="0.5"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Text" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Shadow"
                                            Storyboard.TargetProperty="ShadowDepth"
                                            To="2"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="Shadow"
                                            Storyboard.TargetProperty="BlurRadius"
                                            To="5"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                            Storyboard.TargetName="Shadow"
                                            Storyboard.TargetProperty="ShadowDepth"
                                            To="1"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Shadow"
                                            Storyboard.TargetProperty="BlurRadius"
                                            To="3"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextButton -->
    <Style x:Key="{x:Type c:TextButton}" TargetType="c:TextButton">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Padding" Value="7,5,7,5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="IconFill" Value="{DynamicResource IconColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:TextButton">
                    <Grid>
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="2">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Grid>
                                    <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Size="{TemplateBinding IconSize}" Fill="{TemplateBinding IconFill}"/>
                                    <Grid Name="Status" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-5,-5,0"  Width="12" Height="12" Visibility="Collapsed">
                                        <Border x:Name="New" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0" BorderBrush="{DynamicResource HeadColor}" BorderThickness="1"/>
                                        <Border x:Name="New2" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0"/>
                                    </Grid>
                                </Grid>
                                <ContentPresenter x:Name="Text" VerticalAlignment="Center" Margin="7,0,0,0"/>
                            </StackPanel>
                        </Border>
                        <Border x:Name="Border" Background="Gray" Opacity="0" CornerRadius="2"/>
                        <Border x:Name="Border2" Background="Gray" Opacity="0" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Status" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="New" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            From="0.5"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Text" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton -->
    <Style x:Key="{x:Type c:ToggleButton}" TargetType="c:ToggleButton">
        <Setter Property="Padding" Value="7,5,7,5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ToggleButton">
                    <Grid>
                        <Border Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="2">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid>
                                    <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Size="{TemplateBinding IconSize}" Fill="{TemplateBinding IconFill}"/>
                                    <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-5,-5,0"  Width="12" Height="12">
                                        <Border x:Name="New" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0" BorderBrush="{DynamicResource HeadColor}" BorderThickness="1"/>
                                        <Border x:Name="New2" Background="{DynamicResource RColor4}" CornerRadius="5" Width="0" Height="0"/>
                                    </Grid>
                                </Grid>
                                <ContentPresenter x:Name="Text" VerticalAlignment="Center" Margin="7,0,0,0"/>
                            </StackPanel>
                        </Border>
                        <Border x:Name="Border" Background="Gray" Opacity="0" CornerRadius="2"/>
                        <Border x:Name="Border2" Background="Gray" Opacity="0" CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="New" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="8"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="12"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            From="0.5"
                                            Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Width"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="New2"
                                            Storyboard.TargetProperty="Height"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Text" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ProfileToggleButton -->
    <Style x:Key="{x:Type c:ProfileToggleButton}" TargetType="c:ProfileToggleButton">
        <Setter Property="Padding" Value="7,5,7,5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ProfileToggleButton">
                    <Grid>
                        <Border Background="Transparent"/>
                        <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Size="{TemplateBinding IconSize}" Fill="{TemplateBinding IconFill}"/>
                        <Ellipse x:Name="Border" Fill="Gray" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="25" Height="25"/>
                        <Ellipse x:Name="Border2" Fill="Gray" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="25" Height="25"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="New" Value="True">
                            <Setter TargetName="Icon" Property="Data" Value="{StaticResource AlertCircleIcon}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource WarningColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle-RadioButton -->
    <Style x:Key="{x:Type c:RadioButton}" TargetType="c:RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <c:ToggleButton
                        IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        
                        New="{Binding New, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Icon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IconFill="{Binding IconFill, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IconSize="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ProfileButton -->
    <Style x:Key="{x:Type c:ProfileButton}" TargetType="c:ProfileButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <c:ProfileToggleButton
                        IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        
                        New="{Binding New, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Icon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IconFill="{Binding IconFill, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IconSize="{Binding IconSize, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboboxMenu -->
    <Style x:Key="{x:Type c:ComboboxMenu}" TargetType="c:ComboboxMenu">
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ComboboxMenu">
                    <Grid>
                        <Border x:Name="Border" Background="Gray" Opacity="0" CornerRadius="2"/>
                        <Border x:Name="Border2" Background="Gray" Opacity="0" CornerRadius="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="35"/>
                            </Grid.ColumnDefinitions>
                            <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Grid.Column="0" Fill="{DynamicResource IconColor}" Size="12"/>
                            <StackPanel  Grid.Column="1" Name="Text" VerticalAlignment="Center">
                                <TextBlock Name="Content" Foreground="{DynamicResource TextColor}" Text="{TemplateBinding Content}" FontSize="11"/>
                                <TextBlock Name="Description" Foreground="{DynamicResource TextColor2}" FontSize="10" Text="{TemplateBinding Description}"/>
                            </StackPanel>
                            <c:Icon Data="{StaticResource ArrowMenuDownIcon}" Grid.Column="3" Fill="{DynamicResource IconColor}" Size="8"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Text" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="Description" Value="{x:Null}">
                            <Setter TargetName="Description" Property="Visibility" Value="Collapsed"/>
                            <Setter Property="MinHeight" Value="35"/>
                            <Setter TargetName="Content" Property="FontSize" Value="12"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border -->
    <Style x:Key="Border" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource HeadColor}"/>
        <Setter Property="Effect" Value="{StaticResource Shadow2}"/>
        <Setter Property="CornerRadius" Value="3"/>
    </Style>

    <!-- ProgressBar -->
    <!--
    <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <Border x:Name="PART_Track"
                             CornerRadius="4" Background="{DynamicResource Color3}"/>
                        <Border x:Name="PART_Indicator"
                             CornerRadius="4"
                             HorizontalAlignment="Left"
                             Background="{DynamicResource Color5}" BorderThickness="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- TextBox -->
    <Style x:Key="{x:Type c:TextBox}" TargetType="{x:Type c:TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinHeight"
          Value="25" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="CaretBrush"
          Value="{DynamicResource HeadIconColor}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TextBox}">
                    <Grid>
                        <Border Name="Border"
                                CornerRadius="2"
                                Background="{DynamicResource IconColor}" Opacity="0.05"/>
                        <Border Name="ErrorBorder"
                                CornerRadius="2"
                                Background="Red" Opacity="0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Disabled"
                                          VerticalAlignment="Center"
                                          Margin="6,4,6,4"/>
                            <TextBlock x:Name="PlaceHolder" Text="{TemplateBinding PlaceHolder}" VerticalAlignment="Center" Margin="8,0,0,0"
                                       Foreground="{DynamicResource TextColor}" IsHitTestVisible="False"/>
                            <c:Icon x:Name="Icon" Data="{StaticResource PencilIcon}" Grid.Column="1" Fill="{DynamicResource IconColor}" Size="10"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Error" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ErrorBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.2"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ErrorBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PlaceHolder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PlaceHolder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.1"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.05"
                                            Duration="0:0:0.1"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkbox -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Width="16" Height="16">
                            <Ellipse x:Name="Ripple" Fill="Gray" Opacity="0"/>
                        </Border>
                        
                        <Border x:Name="Border1"
                                Width="16"
                                Height="16"
                                CornerRadius="2"
                                BorderBrush="{DynamicResource CheckboxColor}"
                                BorderThickness="2"/>
                        <Border x:Name="Border2"
                                Width="16"
                                Height="16"
                                Background="{DynamicResource CheckboxColor2}"
                                CornerRadius="2"
                                Opacity="0">
                            <c:Icon x:Name="Icon" Data="{StaticResource CheckIcon}" Size="11" Fill="{DynamicResource BodyColor}"/>
                        </Border>
                        <ContentPresenter
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.1"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Ripple"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0"
                                            Duration="0:0:0.3"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Ripple"
                                            Storyboard.TargetProperty="Margin"
                                            From="0"
                                            To="-10"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.0"
                                            Duration="0:0:0.1"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Ripple"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0"
                                            Duration="0:0:0.3"/>
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Ripple"
                                            Storyboard.TargetProperty="Margin"
                                            From="0"
                                            To="-10"
                                            Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    BorderThickness="0"
                    Background="{DynamicResource Color6}" Opacity="0.1"/>
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{DynamicResource Color5}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.2"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.2"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground"
          Value="{DynamicResource TextColor}" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Grid x:Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource Color2}"/>
                                <ScrollViewer
                                      SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                   Value="false">
                            <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                            <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="2" />
                            <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,-2,0,0" />
                            <Setter TargetName="DropDownBorder"
                    Property="Background"
                    Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            Padding="5"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->
    
    <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource ScrollColor}" Opacity="0.5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource ScrollColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid Name="Bar" Width="5" Margin="0,0,-12,0"
              Opacity="0.3">
            <Track x:Name="PART_Track" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Width"
                                            To="15"
                                            Duration="0:0:0.1"/>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.6"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Width"
                                            To="5"
                                            Duration="0:0:0.1"/>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
        <Grid Name="Bar" Height="5" Margin="0,0,0,-12"
              Opacity="0.3">
            <Track x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Height"
                                            To="15"
                                            Duration="0:0:0.1"/>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.6"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Height"
                                            To="5"
                                            Duration="0:0:0.1"/>
                            <DoubleAnimation
                                            Storyboard.TargetName="Bar"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="Margin" Value="0,-17,0,0"/>
                <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="Margin" Value="-17,0,0,0"/>
                <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type c:ScrollViewer}"
       TargetType="{x:Type c:ScrollViewer}">
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter x:Name="Content"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   HorizontalAlignment="Right"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   VerticalAlignment="Bottom"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}"
       TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <StackPanel IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Padding" Value="12,7,7,7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border Name="Border" Background="Gray" Opacity="0"/>
                        <Border Name="Border2" Background="Gray" Opacity="0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <c:Icon Data="{TemplateBinding DataContext}" Grid.Column="0" Fill="{DynamicResource IconColor}" Size="12"/>
                            <ContentPresenter Margin="0,8,0,8" Grid.Column="1"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ContentPresenter ContentSource="SelectedContent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Notification -->
    <Style x:Key="{x:Type notifications:Notification}" TargetType="notifications:Notification">
        <Setter Property="Margin" Value="5,1,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="notifications:Notification">
                    <Grid MinHeight="50" Background="{DynamicResource HeadColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="35"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Background="Gray" Opacity="0" Grid.ColumnSpan="3"/>
                        <Border x:Name="Border2" Background="Gray" Opacity="0" Grid.ColumnSpan="3"/>
                        <Grid>
                            <c:Icon x:Name="Icon" Data="{TemplateBinding Icon}" Fill="{DynamicResource IconColor}" Size="12" />
                            <c:CircularProgressBar Percentage="{TemplateBinding ProgressValue}" Radius="11" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="2" SegmentColor="{DynamicResource CheckboxColor2}"/>
                        </Grid>
                        
                        <StackPanel Grid.Column="1" Name="Text" VerticalAlignment="Center" Margin="0,5">
                            <TextBlock Name="Content" Foreground="{DynamicResource TextColor}" Text="{TemplateBinding Content}" FontSize="11"/>
                            <TextBlock Name="Description" Foreground="{DynamicResource TextColor2}" FontSize="10" Text="{TemplateBinding Description}" TextWrapping="Wrap"/>
                        </StackPanel>
                        <Border Background="{DynamicResource BorderColor3}" Opacity="0.2" Grid.ColumnSpan="3"
                                Margin="10,1,10,-1" VerticalAlignment="Bottom" Height="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Text" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="Description" Value="{x:Null}">
                            <Setter TargetName="Description" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Content" Property="FontSize" Value="12"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.05"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.05"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView -->
    <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>
    
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="DataContext" Value="{StaticResource OpenIcon}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Border" Background="Gray" Opacity="0"/>
                        <Border x:Name="Border2" Background="Gray" Opacity="0"/>
                        <StackPanel Orientation="Horizontal">
                            <c:Icon x:Name="Expander"
                                    Size="8"
                                    Fill="{DynamicResource IconColor2}"
                                    Data="{StaticResource ArrowMenuDownIcon}"
                                    Margin="10,0,15,0"/>
                            <c:Icon x:Name="Icon"
                                    Fill="{DynamicResource IconColor}"
                                    Data="{TemplateBinding DataContext}"
                                    Margin="0,0,10,0"
                                    Size="12"/>
                            <ContentPresenter x:Name="PART_Header"
                                          ContentSource="Header"
                                              VerticalAlignment="Center"/>
                        </StackPanel>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" Margin="15,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Expander" Property="Data" Value="{StaticResource ArrowMenuRightIcon}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Category" TargetType="ContentControl">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="5,5,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Label Content="{TemplateBinding ContentControl.Tag}" Foreground="{DynamicResource TextColor}" FontFamily="Segoe UI Semibold" Margin="10,0,0,0"/>

            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Grid.Row="1"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="MahAppsFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="MahAppsInvisibleThumbStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MahAppsMenuCommandButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MahAppsFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Opacity" Value=".8"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value=".5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{x:Static dragablz:DragablzColors.WindowGlassBrush}"/>
                <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MahAppsCloseItemCommandButtonStyle" BasedOn="{StaticResource MahAppsMenuCommandButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}"/>
                        <Path x:Name="Path"
                              Data="M0.5,71 L70,0.5 M0.5,1 L70,70.5" 
                              Width="6" Height="6"
                              Stretch="Uniform"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square" 
                              StrokeEndLineCap="Square"
                              SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{x:Static SystemColors.ActiveBorderColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Margin" Value="4 0 2 0" />
        <Setter Property="Opacity" Value=".75" />
        <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="AddItemCommandButtonStyle" BasedOn="{StaticResource MahAppsMenuCommandButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Ellipse Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 Fill="{TemplateBinding Background}"/>
                        <Path x:Name="Path"
                              Data="M38,6L38.0003451911513,70.6666666666666 M70.3336667356886,38L5.50002465137562,38" 
                              Width="6" Height="6"
                              Stretch="Uniform"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1.5"
                              StrokeStartLineCap="Square" 
                              StrokeEndLineCap="Square"
                              SnapsToDevicePixels="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{x:Static SystemColors.ActiveBorderColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Margin" Value="4 0 2 0" />
        <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{x:Static dragablz:DragablzColors.WindowGlassBrush}"/>
                <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MahAppsTrapezoidDragableTabItemStyle"  TargetType="{x:Type dragablz:DragablzItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid x:Name="templateRoot">
                        <Border x:Name="BorderRoot" Background="{DynamicResource HeadColor}" MinWidth="50" Height="25" Margin="0,0,-1,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="25"/>
                                </Grid.ColumnDefinitions>

                                <Rectangle Width="1" Height="12" Grid.Column="1" HorizontalAlignment="Right"
                                           Fill="{DynamicResource BorderColor2}"/>
                                
                                <Border x:Name="Border" Background="{DynamicResource BodyColor}" Grid.ColumnSpan="2" Opacity="0"/>
                                <Border x:Name="Border2" Background="{DynamicResource BodyColor}" Grid.ColumnSpan="2" Opacity="0"/>
                                
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="0"
                                                  Content="{TemplateBinding ContentControl.Content}" Margin="10,0,9,0"/>

                                <Thumb x:Name="PART_Thumb" Grid.ColumnSpan="2"
                                       Style="{StaticResource MahAppsInvisibleThumbStyle}" />

                                <Border Grid.Column="1" Margin="-3,0,3,0">
                                    <Grid>
                                        <c:Icon x:Name="CloseIcon" Data="{StaticResource CloseIcon}" Fill="{DynamicResource IconColor}" Size="7"/>
                                        <c:TextButton Margin="4"
                                                      Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"
                                                      CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CloseIcon"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.2"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="CloseIcon"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MahAppsMetroBaseWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                          Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SemiTransparentWhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MahAppsToolWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahAppsMetroBaseWindowButtonStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="30" />
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="Padding" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type dragablz:HeaderedDragablzItem}" x:Key="MahAppsToolDragablzItemStyle">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
            <Setter Property="BorderThickness" Value="4" />
            <Setter Property="Canvas.Left" Value="{Binding X, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Canvas.Top" Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dragablz:HeaderedDragablzItem}">
                        <Grid Margin="{TemplateBinding Margin}">
                            <Border Background="{DynamicResource WhiteColorBrush}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="5" Direction="315" Color="{DynamicResource AccentColor2}" Opacity=".5" />
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Top" Background="{TemplateBinding BorderBrush}">
                                        <Thumb HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" x:Name="PART_Thumb"
                                               Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                               />
                                        <Grid>
                                            <Button
                                                    Command="{x:Static dockablz:Layout.CloseFloatingItem}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                    Margin="0"
                                                    >
                                                <Path Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
                                                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                            </Button>
                                            <ContentPresenter Content="{TemplateBinding HeaderContent}"                                                               
                                                              ContentTemplate="{TemplateBinding HeaderContentTemplate}" 
                                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                                              ContentTemplateSelector="{TemplateBinding HeaderContentTemplateSelector}"                                                          
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                              IsHitTestVisible="False"
                                                          />
                                        </Grid>
                                    </Grid>
                                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                      Margin="{TemplateBinding Control.Padding }"/>
                                </DockPanel>
                            </Border>
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="Left"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Stretch"
                                   Cursor="SizeWE"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="Top"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Top"
                                   Cursor="SizeNS"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="Right"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Stretch"
                                   Cursor="SizeWE"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="Bottom"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Bottom"
                                   Cursor="SizeNS"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="TopLeft"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Cursor="SizeNWSE"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="TopRight"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Cursor="SizeNESW"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="BottomRight"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Bottom"
                                   Cursor="SizeNWSE"
                                   />
                            <Thumb Style="{StaticResource MahAppsInvisibleThumbStyle}"
                                   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
                                   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
                                   IsEnabled="{Binding Path=(dockablz:Layout.FloatingItemState), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EqualityToBooleanConverter}, ConverterParameter={x:Static WindowState.Normal}}"
                                   dragablz:DragablzItem.SizeGrip="BottomLeft"                                   
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Bottom"
                                   Cursor="SizeNESW"
                                   />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="dockablz:Layout.FloatingItemState" Value="Maximized">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Canvas.Left" Value="0" />
                <Setter Property="Canvas.Top" Value="0" />
                <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dockablz:Layout}}, Path=ActualWidth}" />
                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dockablz:Layout}}, Path=ActualHeight}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StandardEmbeddedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1 -2 1 -2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TabablzScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"
                       Margin="0 1 0 0" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" 
                       Width="36" Height="20"
                       Margin="1 0 0 0" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type dragablz:DragablzItemsControl}" x:Key="TabablzDragablzItemsControlStyle">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  dragablz:DragablzItemsControl}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                      Width="{TemplateBinding ActualWidth}"
                                      Height="{TemplateBinding ActualHeight}"
                                      Template="{StaticResource TabablzScrollViewerControlTemplate}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Width="{TemplateBinding ItemsPresenterWidth}"
                                            Height="{TemplateBinding ItemsPresenterHeight}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dragablz:TabablzControl}" x:Key="MahAppsTabablzControlStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MahAppsTrapezoidDragableTabItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Background="{DynamicResource HeadColor}" BorderBrush="{DynamicResource BorderColor2}" BorderThickness="0,1,0,0"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local"
                                Margin="0 -1 0 0">
                            <Grid x:Name="PART_ItemsHolder" />
                        </Border>
                        <Grid Grid.Column="0" Grid.Row="0" Margin="0,1,2,0" x:Name="HeaderContainerGrid">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource StandardEmbeddedButtonStyle}"></Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" x:Name="PrefixContentControl" 
                                            Content="{TemplateBinding HeaderPrefixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}"/>
                            <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl"                                                         
                                                        Grid.Column="1"
                                                        ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"                                                                                                            
                                                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                        ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                                        KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                                        ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                                        FixedItemCount="{TemplateBinding FixedHeaderCount}"
                                                        Style="{StaticResource TabablzDragablzItemsControlStyle}">
                                <dragablz:DragablzItemsControl.MaxWidth>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <dragablz:TabablzHeaderSizeConverter Orientation="Horizontal"/>
                                        </MultiBinding.Converter>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource Self}" Path="ItemsPresenterWidth" />
                                        <Binding ElementName="PrefixContentControl" Path="ActualWidth" />
                                        <Binding ElementName="DefaultAddButton" Path="DesiredSize.Width" />
                                        <Binding ElementName="SuffixContentControl" Path="DesiredSize.Width" />
                                    </MultiBinding>
                                </dragablz:DragablzItemsControl.MaxWidth>
                            </dragablz:DragablzItemsControl>
                            <Button Style="{StaticResource AddItemCommandButtonStyle}"
                                    x:Name="DefaultAddButton"
                                    Grid.Column="2"
                                    Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                                    Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    />
                            <ContentControl Grid.Column="3" x:Name="SuffixContentControl" 
                                            Content="{TemplateBinding HeaderSuffixContent}"
                                            ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}"                                            
                                            HorizontalAlignment="Stretch"
                                            />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="2"/> 
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="PART_HeaderItemsControl" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_HeaderItemsControl" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="PART_HeaderItemsControl" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="PART_HeaderItemsControl" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_HeaderItemsControl" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="PART_HeaderItemsControl" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsDraggingWindow" Value="True">
                            <Setter TargetName="DefaultAddButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ae:TextEditor}">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="10pt"/>
        <Setter Property="ShowLineNumbers" Value="False"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource BodyColor}"/>
    </Style>
    
    <Style TargetType="{x:Type ae:TextView}">
        <Setter Property="Margin" Value="7,2,-10,3"/>
    </Style>
    
    <Style TargetType="{x:Type ae:LineNumberMargin}">
        <Setter Property="Margin" Value="25,2,20,0"/>
    </Style>
    

</ResourceDictionary>